version: "3.9"

services:
  backend:
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - RUNNING_IN_DOCKER=true
      - SHARED_VOLUME=${SHARED_VOLUME}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
    build:
      context: .
      dockerfile: Dockerfile
    image: thesisapp-backend:latest
    container_name: cloud-ml-backend
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_started
      mailhog:
        condition: service_started
    env_file:
      - .env
    volumes:
    - ./src:/app/src
    - ./pom.xml:/app/pom.xml
    - ./mvnw:/app/mvnw
    - ./.mvn:/app/.mvn
    - ~/.m2:/root/.m2
    - ${SHARED_VOLUME}:/shared
    - //var/run/docker.sock:/var/run/docker.sock\
    - ./keys:/app/keys
  db:
    image: postgres:15
    container_name: cloud-ml-db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    container_name: cloud-ml-minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    volumes:
      - minio_data:/data

  mailhog:
    image: mailhog/mailhog:latest
    container_name: cloud-ml-mailhog
    ports:
      - "8025:8025"  # Web UI
      - "1025:1025"  # SMTP


volumes:
  db_data:
  minio_data:
